// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using UploadingCaseImages.DB;

#nullable disable

namespace UploadingCaseImages.DB.Migrations
{
    [DbContext(typeof(UploadingCaseImagesContext))]
    [Migration("20240820152239_AddUploadingCaseImagesSystemTables")]
    partial class AddUploadingCaseImagesSystemTables
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("UploadingCaseImages.DB.Model.Anatomy", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("ImagePath")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Anatomy");
                });

            modelBuilder.Entity("UploadingCaseImages.DB.Model.CaseImage", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("ImageName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImagePath")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PatientCaseId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PatientCaseId");

                    b.ToTable("CaseImage");
                });

            modelBuilder.Entity("UploadingCaseImages.DB.Model.PatientCase", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AnatomyId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Note")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("VisitDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("AnatomyId");

                    b.ToTable("PatientCase");
                });

            modelBuilder.Entity("UploadingCaseImages.DB.Model.CaseImage", b =>
                {
                    b.HasOne("UploadingCaseImages.DB.Model.PatientCase", "PatientCase")
                        .WithMany("CaseImages")
                        .HasForeignKey("PatientCaseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PatientCase");
                });

            modelBuilder.Entity("UploadingCaseImages.DB.Model.PatientCase", b =>
                {
                    b.HasOne("UploadingCaseImages.DB.Model.Anatomy", "Anatomy")
                        .WithMany()
                        .HasForeignKey("AnatomyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Anatomy");
                });

            modelBuilder.Entity("UploadingCaseImages.DB.Model.PatientCase", b =>
                {
                    b.Navigation("CaseImages");
                });
#pragma warning restore 612, 618
        }
    }
}
